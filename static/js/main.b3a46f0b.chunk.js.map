{"version":3,"sources":["components/Add.js","components/Task.js","components/TaskList.js","components/Extras.js","App.js","serviceWorker.js","index.js"],"names":["Add","state","val","checked","handleChange","e","setState","target","value","handleCheck","handleClick","length","props","add","alert","className","id","type","placeholder","this","onChange","htmlFor","onClick","Component","Task","task","desc","done","important","handleExtras","deleteTask","change","style","textTransform","color","TaskList","notDone","tasks","filter","notDoneTasks","map","key","doneTasks","slice","Extras","data-which","document","querySelector","display","extrasChange","handleSetExtas","App","count","extras","index","findIndex","splice","changeDone","console","log","Array","from","forEach","newTask","prevState","localToTask","undefined","window","localStorage","todoappak","JSON","parse","ids","Math","max","item","upPar","innerText","blured","setAttribute","parseInt","getAttribute","stateVal","stringify","setItem","getLocal","taskLocal","changeExtras","React","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b3a46f0b.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Add extends Component {\n    state = {\n        val: \"\",\n        checked: false\n    }\n    handleChange = (e) => {\n        this.setState({\n            val: e.target.value\n        })\n    }\n    handleCheck = (e) => {\n        this.setState({\n            checked: e.target.checked\n        })\n    }\n    handleClick = () => {\n        const { val, checked } = this.state\n        if (val.length > 2) {\n            const add = this.props.add(val, checked);\n            if (add) {\n                this.setState({\n                    val: '',\n                    checked: false\n                })\n            }\n        } else {\n            alert('wpisz więcej niż dwa znaki')\n        }\n\n    }\n    render() {\n        return (\n            <div className=\"wrapNewTask\">\n                <input className='newTask' id=\"add\" type=\"text\" placeholder='new task' value={this.state.val} onChange={this.handleChange} />\n                <label htmlFor=\"add\"><p className=\"add\" onClick={this.handleClick}><i className=\"fas fa-plus-square\"></i></p></label>\n                <div className=\"checkbox\">\n                    <input className=\"checkbox\" type=\"checkbox\" checked={this.state.checked} id=\"important\" onChange={this.handleCheck} /><label htmlFor=\"important\"> Ważne!</label>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Add;","import React from 'react';\nconst Task = (props) => {\n    const { desc, id, done, important } = props.task;\n    const { handleExtras, deleteTask, change } = props;\n    const importantLook = {\n        textTransform: 'uppercase',\n        color: 'red',\n    }\n    return (\n        <div className=\"single-task\">\n            <span className=\"one-task\" style={important && !done ? importantLook : null}>{desc}  </span>\n            {!done && <button className=\"task-done\" onClick={() => change(id)}><i className=\"fas fa-thumbs-up\"></i></button>}<button className='extra-info' onClick={() => handleExtras(id)}><i className=\"fas fa-book\"></i></button><button className=\"delete-task\" onClick={() => deleteTask(id)}><i className=\"fas fa-times-circle\"></i></button>\n        </div>\n\n    );\n}\n\nexport default Task;","import React from 'react';\nimport Task from './Task';\n\nconst TaskList = (props) => {\n    const notDone = props.tasks.filter(task => !task.done);\n    const done = props.tasks.filter(task => task.done);\n    const notDoneTasks = notDone.map(task => <Task key={task.id} task={task} handleExtras={props.handleExtras} deleteTask={props.deleteTask} change={props.change} />)\n    const doneTasks = done.map(task => <Task key={task.id} task={task} handleExtras={props.handleExtras} deleteTask={props.deleteTask} change={props.change} />)\n\n    return (\n        <div className=\"task-list\">\n            <div className=\"not-done\">\n                <h2>Zadania do zrobienia</h2>\n                {notDoneTasks.length > 0 ? notDoneTasks : <p className=\"free-time\"><i className=\"fas fa-campground\"></i> Masz wolne... =)</p>}\n            </div>\n            <hr />\n            <div className=\"done\">\n                {done.length > 7 && <p className=\"length-info\">Aplikacja wyświetla 7 pierwszych zadań</p>}\n                <h2>Zadania zrobione <span>{doneTasks.length}</span></h2>\n                {doneTasks.slice(0, 7)}\n            </div>\n\n\n\n        </div >\n    );\n}\n\nexport default TaskList;","import React from 'react';\n\nconst Extras = (props) => {\n    const closer = () => {\n        document.querySelector('div.extras').style.display = 'none';\n        document.querySelector('div.blured').style.display = 'none';\n    }\n\n    return (\n        <>\n            <div className=\"blured\"></div>\n            <div className=\"extras\" data-which=\"\">\n                <i className=\"fas fa-window-close\" onClick={() => closer()}></i>\n                <input className=\"extras-in\" placeholder=\"extra info\" type=\"text\" onChange={props.extrasChange} />\n                <p className=\"addExtra\" onClick={() => props.handleSetExtas()}><i className=\"fas fa-plus-square\"></i></p>\n                <p className=\"extras-par\"></p>\n            </div>\n        </>\n    );\n}\n\nexport default Extras;","import React from 'react';\nimport './App.scss';\nimport Add from './components/Add'\nimport TaskList from './components/TaskList'\nimport Extras from './components/Extras'\n\nclass App extends React.Component {\n  count = 0;\n  extras = \"\";\n  state = {\n    tasks: [\n\n    ],\n\n  }\n  deleteTask = (id) => {\n    const tasks = [...this.state.tasks];\n    const index = tasks.findIndex(task => task.id === id);\n    tasks.splice(index, 1);\n    this.setState({\n      tasks\n    })\n  }\n  changeDone = (id) => {\n    console.log(id);\n    const tasks = Array.from(this.state.tasks);\n    tasks.forEach(task => {\n      if (task.id === id) {\n        task.done = true;\n      }\n    })\n    this.setState({\n      tasks\n    })\n  };\n\n  newTask = (val, checked) => {\n    const task = {\n      id: this.count,\n      desc: val,\n      important: checked,\n      done: false,\n      extras: \"\"\n    }\n\n    this.setState(prevState => ({\n      tasks: [...prevState.tasks, task]\n    }))\n\n\n    this.count++\n    return true\n\n  };\n  taskLocal() {\n    let stateVal = JSON.stringify(this.state.tasks);\n    window.localStorage.setItem('todoappak', stateVal);\n  };\n  localToTask = () => {\n    if (window.localStorage.todoappak !== undefined) {\n      const tasks = Array.from(JSON.parse(window.localStorage.todoappak));\n      this.setState({\n        tasks\n      })\n      let ids = Math.max(...tasks.map(item => item.id));\n      this.count = ids + 1;\n\n    }\n\n  }\n  upPar = (id) => {\n    const upTasks = Array.from(this.state.tasks);\n    upTasks.filter(function (task) {\n      if (task.id === id) {\n        document.querySelector('p.extras-par').innerText = task.extras;\n      };\n      return true;\n    })\n  }\n  handleExtras = (id) => {\n    const extras = document.querySelector('div.extras');\n    const blured = document.querySelector('div.blured');\n    this.upPar(id);\n    extras.style.display = 'block';\n\n    extras.setAttribute(\"data-which\", id);\n    blured.style.display = 'block';\n  }\n  extrasChange = (e) => {\n    this.extras = e.target.value;\n  }\n  handleSetExtas = () => {\n    const extras = document.querySelector('div.extras');\n    let id = parseInt(extras.getAttribute(\"data-which\"));\n    const tasks = Array.from(this.state.tasks);\n    tasks.forEach(task => {\n      if (task.id === id) {\n        task.extras = this.extras;\n      }\n    })\n    this.setState({\n      tasks\n    })\n    this.upPar(id);\n\n    document.querySelector('input.extras-in').value = \"\";\n\n  }\n  render() {\n\n    return (\n\n      <>\n        <div className=\"wrap\">\n          <h1 className=\"webTitle\">To Do List</h1>\n          <div className=\"list\">\n            <Add add={this.newTask} />\n            <TaskList tasks={this.state.tasks} handleExtras={this.handleExtras} deleteTask={this.deleteTask} change={this.changeDone} getLocal={this.taskLocal} />\n            <Extras tasks={this.state.tasks} changeExtras={this.changeExtras} extrasChange={this.extrasChange} handleSetExtas={this.handleSetExtas} />\n          </div>\n        </div>\n      </>\n\n    );\n  }\n  componentDidMount() {\n    this.localToTask()\n  }\n  componentDidUpdate() {\n    this.taskLocal()\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}